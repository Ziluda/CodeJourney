# MY CODE & MODEL CODE

from art import logo
from replit import clear

# Add
def add(n1, n2):
    return n1 + n2

# Subtract
def subtract(n1, n2):
    return n1 - n2

# Multiply
def multiply(n1, n2):
    return n1 * n2

# Divide
def divide(n1, n2):
    return n1/n2

operations = {
    "+": add,
    "-": subtract,
    "*": multiply,
    "/": divide
}

# The dictionary above is gonna act as the means in which we're gonna call these functions, in the following code we're gonna tap into the operations and then pass in the key and then store this as the function that we want (in a new variable called calculation_function). That means we can then call this new calculation_function and pass in the arguments.

def calculator():
    print(logo)
    
    num1 = float(input("First number: "))
    
    for symbol in operations:
        print(symbol)
    
    want_continue = True
    
    while want_continue == True:
        op_symbolX = input("Pick an operation: ")
    
        while op_symbolX not in ["+", "-", "*", "/"]:
            print("Please enter a valid operation: ")
            op_symbolX = input("Pick an operation from above: ")
        
        numX = float(input("What's the next number: "))
        
        calculation_function = operations[op_symbolX]
    
        answer = calculation_function(num1, numX)
        
        print(f"{num1} {op_symbolX} {numX} = {answer}")
    
        determines = input(f"Type 'y' to continue calculating with {answer}, 's' to start a new calculation, or 'n' to exit: ")
            
        if determines == 'y':
            num1 = answer
    
        elif determines == 's':
            clear()
            want_continue = False
            calculator()
        
calculator()


logo = logo = """
 _____________________
|  _________________  |
| | Pythonista   0. | |  .----------------.  .----------------.  .----------------.  .----------------. 
| |_________________| | | .--------------. || .--------------. || .--------------. || .--------------. |
|  ___ ___ ___   ___  | | |     ______   | || |      __      | || |   _____      | || |     ______   | |
| | 7 | 8 | 9 | | + | | | |   .' ___  |  | || |     /  \     | || |  |_   _|     | || |   .' ___  |  | |
| |___|___|___| |___| | | |  / .'   \_|  | || |    / /\ \    | || |    | |       | || |  / .'   \_|  | |
| | 4 | 5 | 6 | | - | | | |  | |         | || |   / ____ \   | || |    | |   _   | || |  | |         | |
| |___|___|___| |___| | | |  \ `.___.'\  | || | _/ /    \ \_ | || |   _| |__/ |  | || |  \ `.___.'\  | |
| | 1 | 2 | 3 | | x | | | |   `._____.'  | || ||____|  |____|| || |  |________|  | || |   `._____.'  | |
| |___|___|___| |___| | | |              | || |              | || |              | || |              | |
| | . | 0 | = | | / | | | '--------------' || '--------------' || '--------------' || '--------------' |
| |___|___|___| |___| |  '----------------'  '----------------'  '----------------'  '----------------' 
|_____________________|
"""








